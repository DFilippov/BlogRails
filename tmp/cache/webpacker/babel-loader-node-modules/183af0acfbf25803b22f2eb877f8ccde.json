{"ast":null,"code":"import consumer from \"./consumer\"; // document.addEventListener('turbolinks:load', () => {\n\nconsumer.subscriptions.create(\"CommentChannel\", {\n  connected: function connected() {// Called when the subscription is ready for use on the server\n    // console.log(\"Connected to server! Congrats!!!\")\n  },\n  disconnected: function disconnected() {// Called when the subscription has been terminated by the server\n    // console.log(\"DISCONNECTED !!!\")\n  },\n  received: function received(data) {\n    // Called when there's incoming data on the websocket for this channel\n    var comment_body = document.getElementById(\"comment_body_\".concat(data['id']));\n    comment_body.innerText = data['body'];\n    var badge = \"    <span class=\\\"badge  badge-warning\\\">JUST EDITED (at: \".concat(data['updated_at'], \")</span>\");\n    alert(data['updated_at']);\n    var element = document.getElementById(\"comment-updated-badge-\".concat(data['id]']));\n    element.innerHTML = badge;\n  }\n}); // })","map":{"version":3,"sources":["/Users/DFilippov/Projects/blogRails/app/javascript/channels/comment_channel.js"],"names":["consumer","subscriptions","create","connected","disconnected","received","data","comment_body","document","getElementById","innerText","badge","alert","element","innerHTML"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB,C,CAEA;;AAEIA,QAAQ,CAACC,aAAT,CAAuBC,MAAvB,CAA8B,gBAA9B,EAAgD;AAC9CC,EAAAA,SAD8C,uBAClC,CACV;AACA;AACD,GAJ6C;AAM9CC,EAAAA,YAN8C,0BAM/B,CACb;AACA;AACD,GAT6C;AAW9CC,EAAAA,QAX8C,oBAWrCC,IAXqC,EAW/B;AACb;AAEA,QAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAT,wBAAwCH,IAAI,CAAC,IAAD,CAA5C,EAArB;AACAC,IAAAA,YAAY,CAACG,SAAb,GAAyBJ,IAAI,CAAC,MAAD,CAA7B;AACA,QAAMK,KAAK,uEAA8DL,IAAI,CAAC,YAAD,CAAlE,aAAX;AACRM,IAAAA,KAAK,CAACN,IAAI,CAAC,YAAD,CAAL,CAAL;AACQ,QAAMO,OAAO,GAAGL,QAAQ,CAACC,cAAT,iCAAiDH,IAAI,CAAC,KAAD,CAArD,EAAhB;AACAO,IAAAA,OAAO,CAACC,SAAR,GAAoBH,KAApB;AAED;AArB6C,CAAhD,E,CAwBJ","sourcesContent":["import consumer from \"./consumer\"\n\n// document.addEventListener('turbolinks:load', () => {\n\n    consumer.subscriptions.create(\"CommentChannel\", {\n      connected() {\n        // Called when the subscription is ready for use on the server\n        // console.log(\"Connected to server! Congrats!!!\")\n      },\n\n      disconnected() {\n        // Called when the subscription has been terminated by the server\n        // console.log(\"DISCONNECTED !!!\")\n      },\n\n      received(data) {\n        // Called when there's incoming data on the websocket for this channel\n\n        const comment_body = document.getElementById(`comment_body_${data['id']}`);\n        comment_body.innerText = data['body'];\n        const badge = `    <span class=\"badge  badge-warning\">JUST EDITED (at: ${data['updated_at']})</span>`;\nalert(data['updated_at'])\n        const element = document.getElementById(`comment-updated-badge-${data['id]']}`);\n        element.innerHTML = badge;\n\n      }\n    });\n\n// })\n"]},"metadata":{},"sourceType":"module"}