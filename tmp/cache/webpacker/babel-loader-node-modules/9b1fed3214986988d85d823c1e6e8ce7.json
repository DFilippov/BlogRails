{"ast":null,"code":"import consumer from \"./consumer\"; // document.addEventListener('turbolinks:load', () => {\n\nconsumer.subscriptions.create(\"CommentChannel\", {\n  connected: function connected() {\n    // Called when the subscription is ready for use on the server\n    console.log(\"Connected to server! Congrats!!!\");\n  },\n  disconnected: function disconnected() {\n    // Called when the subscription has been terminated by the server\n    console.log(\"DISCONNECTED !!!\");\n  },\n  received: function received(data) {\n    // Called when there's incoming data on the websocket for this channel\n    var comment_body = document.getElementById(\"comment_body_\".concat(data['comment_id']));\n    comment_body.innerText = data['comment_body'];\n    var badge = \"    <span class=\\\"badge  badge-danger\\\">JUST EDITED (at: \".concat(data['updated_at'], \")</span>\");\n    comment_body.insertAdjacentHTML('beforeend', badge); // comment_body.innerHTML += badge;\n  }\n}); // })","map":{"version":3,"sources":["/Users/DFilippov/Projects/blogRails/app/javascript/channels/comment_channel.js"],"names":["consumer","subscriptions","create","connected","console","log","disconnected","received","data","comment_body","document","getElementById","innerText","badge","insertAdjacentHTML"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB,C,CAEA;;AAEIA,QAAQ,CAACC,aAAT,CAAuBC,MAAvB,CAA8B,gBAA9B,EAAgD;AAC9CC,EAAAA,SAD8C,uBAClC;AACV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD,GAJ6C;AAM9CC,EAAAA,YAN8C,0BAM/B;AACb;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,GAT6C;AAW9CE,EAAAA,QAX8C,oBAWrCC,IAXqC,EAW/B;AACb;AAEA,QAAMC,YAAY,GAAGC,QAAQ,CAACC,cAAT,wBAAwCH,IAAI,CAAC,YAAD,CAA5C,EAArB;AACAC,IAAAA,YAAY,CAACG,SAAb,GAAyBJ,IAAI,CAAC,cAAD,CAA7B;AACA,QAAMK,KAAK,sEAA6DL,IAAI,CAAC,YAAD,CAAjE,aAAX;AACAC,IAAAA,YAAY,CAACK,kBAAb,CAAgC,WAAhC,EAA6CD,KAA7C,EANa,CAOb;AAED;AApB6C,CAAhD,E,CAuBJ","sourcesContent":["import consumer from \"./consumer\"\n\n// document.addEventListener('turbolinks:load', () => {\n\n    consumer.subscriptions.create(\"CommentChannel\", {\n      connected() {\n        // Called when the subscription is ready for use on the server\n        console.log(\"Connected to server! Congrats!!!\")\n      },\n\n      disconnected() {\n        // Called when the subscription has been terminated by the server\n        console.log(\"DISCONNECTED !!!\")\n      },\n\n      received(data) {\n        // Called when there's incoming data on the websocket for this channel\n\n        const comment_body = document.getElementById(`comment_body_${data['comment_id']}`);\n        comment_body.innerText = data['comment_body'];\n        const badge = `    <span class=\"badge  badge-danger\">JUST EDITED (at: ${data['updated_at']})</span>`\n        comment_body.insertAdjacentHTML('beforeend', badge)\n        // comment_body.innerHTML += badge;\n\n      }\n    });\n\n// })\n"]},"metadata":{},"sourceType":"module"}