{"ast":null,"code":"import consumer from \"./consumer\";\nconsumer.subscriptions.create(\"CommentChannel\", {\n  connected: function connected() {// Called when the subscription is ready for use on the server\n    // console.log(\"Connected to server! Congrats!!!\")\n  },\n  disconnected: function disconnected() {// Called when the subscription has been terminated by the server\n    // console.log(\"DISCONNECTED !!!\")\n  },\n  received: function received(data) {\n    // Called when there's incoming data on the websocket for this channel\n    alert(data);\n\n    if (data['action'] == 'edit') {\n      refreshEdittedCommentInfo(data);\n    } else if (data['destroy'] == 'destroy') {\n      destroyCommentInfo();\n    }\n  }\n});\n\nfunction refreshEdittedCommentInfo(data) {\n  var comment_body = document.getElementById(\"comment_body_\".concat(data['id']));\n  comment_body.innerText = data['body'];\n  var badge = \"    <span class=\\\"badge  badge-warning\\\">JUST MODIFIED (at: \".concat(data['updated_at'], \")</span>\");\n  var element = document.getElementById(\"comment-updated-badge-\".concat(data['id']));\n  element.innerHTML = badge;\n}\n\nfunction destroyCommentInfo() {\n  var commenter = data['author'];\n  var commentShadow = document.getElementById(\"shadow-\".concat(data['id']));\n  commentShadow.innerHTML = \"\" + \"<i>Commenter: \".concat(commenter, \"</i><br>\") + \"<i style='color: red'>DELETED THIS COMMENT</i>\";\n}","map":{"version":3,"sources":["/Users/DFilippov/Projects/blogRails/app/javascript/channels/comment_channel.js"],"names":["consumer","subscriptions","create","connected","disconnected","received","data","alert","refreshEdittedCommentInfo","destroyCommentInfo","comment_body","document","getElementById","innerText","badge","element","innerHTML","commenter","commentShadow"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEIA,QAAQ,CAACC,aAAT,CAAuBC,MAAvB,CAA8B,gBAA9B,EAAgD;AAC9CC,EAAAA,SAD8C,uBAClC,CACV;AACA;AACD,GAJ6C;AAM9CC,EAAAA,YAN8C,0BAM/B,CACb;AACA;AACD,GAT6C;AAW9CC,EAAAA,QAX8C,oBAWrCC,IAXqC,EAW/B;AACb;AAEAC,IAAAA,KAAK,CAACD,IAAD,CAAL;;AAEA,QAAIA,IAAI,CAAC,QAAD,CAAJ,IAAkB,MAAtB,EAA8B;AAC5BE,MAAAA,yBAAyB,CAACF,IAAD,CAAzB;AACD,KAFD,MAEO,IAAIA,IAAI,CAAC,SAAD,CAAJ,IAAmB,SAAvB,EAAkC;AACvCG,MAAAA,kBAAkB;AACnB;AAGF;AAvB6C,CAAhD;;AA0BJ,SAASD,yBAAT,CAAmCF,IAAnC,EAAyC;AACvC,MAAMI,YAAY,GAAGC,QAAQ,CAACC,cAAT,wBAAwCN,IAAI,CAAC,IAAD,CAA5C,EAArB;AACAI,EAAAA,YAAY,CAACG,SAAb,GAAyBP,IAAI,CAAC,MAAD,CAA7B;AACA,MAAMQ,KAAK,yEAAgER,IAAI,CAAC,YAAD,CAApE,aAAX;AACA,MAAMS,OAAO,GAAGJ,QAAQ,CAACC,cAAT,iCAAiDN,IAAI,CAAC,IAAD,CAArD,EAAhB;AACAS,EAAAA,OAAO,CAACC,SAAR,GAAoBF,KAApB;AACD;;AAED,SAASL,kBAAT,GAA8B;AAC5B,MAAMQ,SAAS,GAAGX,IAAI,CAAC,QAAD,CAAtB;AACA,MAAMY,aAAa,GAAGP,QAAQ,CAACC,cAAT,kBAAkCN,IAAI,CAAC,IAAD,CAAtC,EAAtB;AACAY,EAAAA,aAAa,CAACF,SAAd,GAA0B,6BACDC,SADC,gBAElB,gDAFR;AAGD","sourcesContent":["import consumer from \"./consumer\"\n\n    consumer.subscriptions.create(\"CommentChannel\", {\n      connected() {\n        // Called when the subscription is ready for use on the server\n        // console.log(\"Connected to server! Congrats!!!\")\n      },\n\n      disconnected() {\n        // Called when the subscription has been terminated by the server\n        // console.log(\"DISCONNECTED !!!\")\n      },\n\n      received(data) {\n        // Called when there's incoming data on the websocket for this channel\n\n        alert(data)\n\n        if (data['action'] == 'edit') {\n          refreshEdittedCommentInfo(data)\n        } else if (data['destroy'] == 'destroy') {\n          destroyCommentInfo()\n        }\n\n\n      }\n    });\n\nfunction refreshEdittedCommentInfo(data) {\n  const comment_body = document.getElementById(`comment_body_${data['id']}`);\n  comment_body.innerText = data['body'];\n  const badge = `    <span class=\"badge  badge-warning\">JUST MODIFIED (at: ${data['updated_at']})</span>`;\n  const element = document.getElementById(`comment-updated-badge-${data['id']}`);\n  element.innerHTML = badge;\n}\n\nfunction destroyCommentInfo() {\n  const commenter = data['author'];\n  const commentShadow = document.getElementById(`shadow-${data['id']}`);\n  commentShadow.innerHTML = \"\" +\n          `<i>Commenter: ${commenter}</i><br>` +\n          \"<i style='color: red'>DELETED THIS COMMENT</i>\"\n}"]},"metadata":{},"sourceType":"module"}